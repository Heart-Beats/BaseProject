// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    dependencies {
        // 添加 VasDolly 多渠道打包插件
        classpath 'com.tencent.vasdolly:plugin:3.0.4'
    }
}

plugins {
    alias libs.plugins.android.application apply false
    alias libs.plugins.android.library apply false
    alias libs.plugins.kotlin.android apply false
}

//if (!isUseRemoteDependencies.toBoolean()) {
//    // 使用远程依赖时无多构建，找不到相关构建库，因此不用引入
//    apply from: 'maven_publish.gradle'
//}

task clean(type: Delete) {
    if (rootProject.buildDir.exists()) {
        delete rootProject.buildDir
    }

    gradle.includedBuilds.forEach {
        dependsOn it.task(":clean")
    }
}


// 在项目依赖构建完成时，向根项目注册一个发布所有子项目的任务
gradle.projectsEvaluated {
    def publishAllTaskName = ['publishMavenPublicationToMavenLocal', 'publishMavenPublicationToMavenCentralRepository']

    publishAllTaskName.forEach { publishTaskName ->
        def publishAllName = publishTaskName.replace('publishMavenPublication', 'publishAll')

        // 发布所在的仓库名称
        def publishRepositoryName = publishTaskName.split('publishMavenPublicationTo')[1]

        // 在根项目下创建所有的发布任务
        gradle.rootProject.task(publishAllName) {
            group = "publishing"
            description = "发布所有组件到 ${publishRepositoryName}"

            gradle.includedBuilds.forEach { includedBuild ->
                dependsOn includedBuild.task(":${publishAllName}")
            }

            doLast {
                logger.lifecycle("✅ BaseProject 所有组件发布至 ${publishRepositoryName} 完成")
            }
        }
    }
}
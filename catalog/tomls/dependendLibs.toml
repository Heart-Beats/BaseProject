#声明相关依赖库
[libraries]

# 测试相关
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "testExtJunit" }
androidx-test-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "testEspressoCore" }

# compose
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "compose" }
androidx-compose-ui = { group = "androidx.compose.ui", name = "ui", version.ref = "compose" }
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview", version.ref = "compose" }
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling", version.ref = "compose" }
androidx-compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4", version.ref = "compose" }
androidx-compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest", version.ref = "compose" }
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "material3" }

androidx_core_ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx_appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx_constraint_layout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintLayout" }
androidx_activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
androidx_activity_ktx = { group = "androidx.activity", name = "activity-ktx", version.ref = "activity" }
androidx_fragment = { group = "androidx.fragment", name = "fragment", version.ref = "fragment" }
androidx_fragment_ktx = { group = "androidx.fragment", name = "fragment-ktx", version.ref = "fragment" }
androidx_security_crypto = { group = "androidx.security", name = "security-crypto", version.ref = "securityCrypto" }
androidx_recyclerview = { group = "androidx.recyclerview", name = "recyclerview", version.ref = "recyclerview" }
androidx_view_binding = { group = "androidx.databinding", name = "viewbinding", version.ref = "dataBinding" }
androidx_databinding_runtime = { group = "androidx.databinding", name = "databinding-runtime", version.ref = "dataBinding" }

# camera_core 可选， camera-camera2已包含该依赖
androidx_camera_core = { group = "androidx.camera", name = "camera-core", version.ref = "cameraX" }
androidx_camera_camera2 = { group = "androidx.camera", name = "camera-camera2", version.ref = "cameraX" }
androidx_camera_lifecycle = { group = "androidx.camera", name = "camera-lifecycle", version.ref = "cameraX" }
androidx_camera_view = { group = "androidx.camera", name = "camera-view", version.ref = "cameraX" }
androidx_camera_extensions = { group = "androidx.camera", name = "camera-extensions", version.ref = "cameraX" }

androidx_palette = { group = "androidx.palette", name = "palette", version.ref = "palette" }
androidx_palette_ktx = { group = "androidx.palette", name = "palette-ktx", version.ref = "palette" }

androidx_startup = { group = "androidx.startup", name = "startup-runtime", version.ref = "startup" }

# 以下这种形式也支持
androidx_lifecycle_extensions = "androidx.lifecycle:lifecycle-extensions:2.2.0"
androidx_lifecycle_livedata_ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
androidx_lifecycle_viewmodel_ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx_lifecycle_runtime_ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }

material = { module = "com.google.android.material:material", version.ref = "material" }


kotlin_stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
#协程核心库
kotlinx_coroutines_core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
#协程 Android 平台库
kotlinx_coroutines_android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinCoroutines" }


#Java language implementation
navigation_fragment = { module = "androidx.navigation:navigation-fragment", version.ref = "navVersion" }
navigation_ui = { module = "androidx.navigation:navigation-ui", version.ref = "navVersion" }
# Kotlin
navigation_fragment_ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navVersion" }
navigation_ui_ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navVersion" }
#Feature module Support
navigation_dynamic_features_fragment = { module = "androidx.navigation:navigation-dynamic-features-fragment", version.ref = "navVersion" }
# Jetpack Compose Integration
navigation_compose = { module = "androidx.navigation:navigation-compose", version.ref = "navVersion" }

xlog = { module = "com.elvishew:xlog", version.ref = "xlog" }

retrofit_retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit_converter_gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
retrofit_adapter_rxjava3 = { module = "com.squareup.retrofit2:adapter-rxjava3", version.ref = "retrofit" }

okHttp_logging_interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okHttp_okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

#基于 Okhttp 的一个网络请求库：https://github.com/getActivity/EasyHttp 除了定义接口进行请求外，可以更方便地进行文件上传或者下载
okhttp_easy_http = { module = "com.github.getActivity:EasyHttp", version.ref = "easyHttp" }


#基础依赖包，必须要依赖
statusbar_immersionbar = { module = "com.geyifeng.immersionbar:immersionbar", version.ref = "immersionBar" }
# kotlin扩展（可选）
statusbar_immersionbar_ktx = { module = "com.geyifeng.immersionbar:immersionbar", version.ref = "immersionBar" }


event_bus = { module = "org.greenrobot:eventbus", version.ref = "eventBus" }

rxjava3_rxjava = { module = "io.reactivex.rxjava3:rxjava", version.ref = "rxJava3" }
rxjava3_rxandroid = { module = "io.reactivex.rxjava3:rxandroid", version.ref = "rxAndroid" }

glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }

permissionX = { module = "com.guolindev.permissionx:permissionx", version.ref = "permissionX" }

gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
fastJson = { module = "com.alibaba:fastjson", version.ref = "fastJson" }

butterknife = { module = "com.jakewharton:butterknife", version.ref = "butterKnife" }

baseRecyclerViewAdapterHelper = { module = "com.github.CymChad:BaseRecyclerViewAdapterHelper", version.ref = "brvah" }

xPopup = { module = "com.github.li-xiaojun:XPopup", version.ref = "xPopup" }

#该库使用更灵活，可扩展性更高, https://github.com/jenly1314/ZXingLite
zxing_lite = { module = "com.github.jenly1314:zxing-lite", version.ref = "zxingLite" }

utilCodeX = { module = "com.blankj:utilcodex", version.ref = "utilCodeX" }
shortcutBadger = { module = "me.leolin:ShortcutBadger", version.ref = "shortcutBadger" }

photoView = { module = "com.github.chrisbanes:PhotoView", version.ref = "photoView" }

# 基础库依赖， 必须
umeng_common = "com.umeng.umsdk:common:9.4.4"
umeng_asms = "com.umeng.umsdk:asms:1.5.0"
#友盟Push依赖
umeng_push = "com.umeng.umsdk:push:6.4.8"
# 性能监控，错误分析升级为独立SDK，看crash数据请一定集成，可选
umeng_apm = "com.umeng.umsdk:apm:1.5.2"

#*************************************** 分享开始   ***************************************************
# 分享核心库，必选
umeng_share_core = "com.umeng.umsdk:share-core:7.1.7"
# 分享面板功能，可选
umeng_share_board = "com.umeng.umsdk:share-board:7.1.7"

# 微信完整版
umeng_share_wx = "com.umeng.umsdk:share-wx:7.1.7"
# 微信官方依赖库，必选
wechat_sdk_android_without_mta = { module = "com.tencent.mm.opensdk:wechat-sdk-android-without-mta", version.ref = "weiXinOpenSdk" }

# QQ完整版
umeng_share_qq = "com.umeng.umsdk:share-qq:7.1.7"
# QQ官方sdk 3.53及之后版本需要集成okhttp3.x，必选
okhttp_okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

# 新浪微博完整版
umeng_share_sina = "com.umeng.umsdk:share-sina:7.1.7"
# 新浪微博官方SDK依赖库，必选
sinaWeiBoSdk = "io.github.sinaweibosdk:core:11.11.1@aar"

# 钉钉完整版
umeng_share_dingding = "com.umeng.umsdk:share-dingding:7.1.7"
# 钉钉官方依赖库，必选
dd_share_sdk = "com.alibaba.android:ddsharesdk:1.2.0@jar"

# 支付宝完整版
umeng_share_alipay = "com.umeng.umsdk:share-alipay:7.1.7"


banner = { module = "io.github.youth5201314:banner", version.ref = "banner" }

jsBridge = { module = "com.github.lzyzsd:jsbridge", version.ref = "jsBridge" }

# 核心必须依赖
smartRefreshLayout_kernel = { module = "io.github.scwang90:refresh-layout-kernel", version.ref = "smartRefreshLayout" }

# 经典刷新头
smartRefreshLayout_header_classics = { module = "io.github.scwang90:refresh-header-classics", version.ref = "smartRefreshLayout" }
# 雷达刷新头
smartRefreshLayout_header_radar = { module = "io.github.scwang90:refresh-header-radar", version.ref = "smartRefreshLayout" }
# 虚拟刷新头
smartRefreshLayout_header_falsify = { module = "io.github.scwang90:refresh-header-falsify", version.ref = "smartRefreshLayout" }
# 谷歌刷新头
smartRefreshLayout_header_material = { module = "io.github.scwang90:refresh-header-material", version.ref = "smartRefreshLayout" }
# 二级刷新头
smartRefreshLayout_header_two_level = { module = "io.github.scwang90:refresh-header-two-level", version.ref = "smartRefreshLayout" }
# 球脉冲加载
smartRefreshLayout_footer_ball = { module = "io.github.scwang90:refresh-footer-ball", version.ref = "smartRefreshLayout" }
# 经典加载
smartRefreshLayout_footer_classics = { module = "io.github.scwang90:refresh-footer-ball", version.ref = "smartRefreshLayout" }


# 图片选择基础，必须
pickSelector_picture_selector = { module = "io.github.lucksiege:pictureselector", version.ref = "pictureSelector" }
# 图像压缩库（非必要, 基于 Luban）
pickSelector_picture_selector_compress = { module = "io.github.lucksiege:compress", version.ref = "pictureSelector" }
# 图片裁剪库（非必要，基于 uCrop）
pickSelector_picture_selector_ucrop = { module = "io.github.lucksiege:ucrop", version.ref = "pictureSelector" }
#  简单的 camerax 库（非必要）
pickSelector_picture_selector_camerax = { module = "io.github.lucksiege:camerax", version.ref = "pictureSelector" }

# 文件选择库
pickSelector_file_picker = { module = "me.rosuh:AndroidFilePicker", version.ref = "androidFilePicker" }


# 快速实现相关 view  Shape 框架, github 地址：https://github.com/getActivity/ShapeView
shapeView = { module = "com.github.getActivity:ShapeView", version.ref = "shapeView" }

# 可高度定制化的日历组件， github 地址：https://github.com/huanghaibin-dev/CalendarView
calendarView = { module = "com.haibin:calendarview", version.ref = "calendarView" }

flowLayout = { module = "com.hyman:flowlayout-lib", version.ref = "flowLayout" }


#  模仿微信拍照的Android开源控件
camera = { module = "cjt.library.wheel:camera", version.ref = "camera" }

# 支持粘贴的验证码输入框
verificationCodeInputView = { module = "com.github.Wynsbin:VerificationCodeInputView", version.ref = "verificationCodeInputView" }

# 完整版引入（视频播放）
gsyVideoPlayer = { module = "com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer", version.ref = "gsyVideoPlayer" }

# 不包含统计功能
weiXinOpenSdk = { module = "com.tencent.mm.opensdk:wechat-sdk-android-without-mta", version.ref = "weiXinOpenSdk" }

tbsSdk = { module = "com.tencent.tbs:tbssdk", version.ref = "tbsSdk" }

tencentCos = { module = "com.qcloud.cos:cos-android-lite", version.ref = "tencentCos" }

mmkv = { module = "com.tencent:mmkv", version.ref = "mmkv" }

# 不包含统计功能
updateAppUtilsx = { module = "com.teprinciple:updateapputilsx", version.ref = "updateAppUtilsx" }

lottie = { module = "com.airbnb.android:lottie", version.ref = "lottie" }

# 波浪动画的字符侧边栏， 地址： https://github.com/gjiazhe/WaveSideBar
waveSideBar = { module = "com.gjiazhe:wavesidebar", version.ref = "waveSideBar" }

# 今日头条屏幕适配方案： 地址： https://github.com/JessYanCoding/AndroidAutoSize
androidAutoSize = { module = "com.github.JessYanCoding:AndroidAutoSize", version.ref = "androidAutoSize" }

# 腾讯开源的插件框架， 地址： https://github.com/Tencent/Shadow
shadow_host = { module = "com.tencent.shadow.dynamic:host", version.ref = "shadow" }
shadow_host_multi_loader_ext = { module = "com.tencent.shadow.dynamic:host-multi-loader-ext", version.ref = "shadow" }
shadow_activity_container = { module = "com.tencent.shadow.core:activity-container", version.ref = "shadow" }
shadow_manager = { module = "com.tencent.shadow.dynamic:manager", version.ref = "shadow" }
shadow_manager_multi_loader_ext = { module = "com.tencent.shadow.dynamic:manager-multi-loader-ext", version.ref = "shadow" }
shadow_common = { module = "com.tencent.shadow.core:common", version.ref = "shadow" }
shadow_loader = { module = "com.tencent.shadow.core:loader", version.ref = "shadow" }
shadow_loader_impl = { module = "com.tencent.shadow.dynamic:loader-impl", version.ref = "shadow" }

android_gif_drawable = { module = "pl.droidsonroids.gif:android-gif-drawable", version.ref = "androidGifDrawable" }
aliPaySdk = { module = "com.alipay.sdk:alipaysdk-android", version.ref = "aliPay" }
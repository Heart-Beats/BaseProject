// 是否修改构建 apk 输出目录
def isModifyBuildOutputDirectory = true

android.applicationVariants.all { variant ->
    variant.outputs.all { output ->
        output.outputFileName = outputFileName.replace(".apk", "_" + new Date().format("yyyyMMdd") + "_" + variant.versionName + ".apk")

        // 原有的构建输出路径
        def originOutputDirectory = output.outputFile.parentFile
        // 修改生成 apk 的位置
        def modifyOutputDirectory = new File(rootProject.projectDir, "apk/")

        def outputDirectory = isModifyBuildOutputDirectory ? modifyOutputDirectory : originOutputDirectory
        variant.packageApplicationProvider.get().outputDirectory = outputDirectory
    }
}

tasks.configureEach { Task task ->
    if (!isModifyBuildOutputDirectory) return

    // 注意：如果是有多个 flavor，则为 merge“Flavor”DebugNativeLibs 的形式
    String taskName = task.name

    if (taskName.matches('^assemble.*[(Debug)|(Release)]$')) {
        String variantName = taskName.split('assemble').last()

        task.doLast {
            println "------------------- ${taskName} end -------------------"

            def flavorName = variantName.split("(Debug)|(Release)")[0]
            def buildType = variantName - flavorName

            // 修改生成 apk 的位置
            def outputDirectory = new File(rootProject.projectDir, "apk/")

            def apkListingFileRedirectTask = tasks.named("create${variantName}ApkListingFileRedirect").get()
            File listingFile = apkListingFileRedirectTask.property("listingFile").asFile.get()
            // apk 原始输出位置
            def buildApkOutputDirectory = listingFile.parentFile

            println "------------ 开始拷贝 ${outputDirectory} 到 ${buildApkOutputDirectory} 下  ----------"

            // 将打包生成的 apk 复制到 原有的构建目录
            copy {
                from outputDirectory
                into buildApkOutputDirectory
            }
        }

        // 修改 apkListingFileRedirect 任务与 assembleVariantTask 任务的顺序
        def apkListingFileRedirectTask = tasks.named("create${variantName}ApkListingFileRedirect").get()
        if (apkListingFileRedirectTask != null) {
            apkListingFileRedirectTask.mustRunAfter(task)
        }
    }
}
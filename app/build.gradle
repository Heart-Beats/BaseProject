import com.buildsrc.AndroidVersions
import com.buildsrc.Deps

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs'
}

apply from: "../commonGradle/build_config.gradle"

android {
    compileSdk AndroidVersions.COMPILE_SDK

    defaultConfig {
        applicationId 'com.hl.baseproject.demo'
        minSdk AndroidVersions.MIN_SDK
        targetSdk AndroidVersions.TARGET_SDK
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file('./license/BaseProject.jks')
            storePassword 'android123456'
            keyPassword 'android123456'
            keyAlias 'BaseProject'
        }
        realse {
            storeFile file('./license/BaseProject.jks')
            storePassword 'android123456'
            keyPassword 'android123456'
            keyAlias 'BaseProject'
        }
    }

    buildTypes {
        debug {
            // 是否需要混淆
            def needMinify = false

            if (needMinify) {
                // 是否开启调试， 混淆打开时 debug 调试需关闭，否则混淆无效
                debuggable !needMinify

                minifyEnabled true
                zipAlignEnabled true
                shrinkResources true
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }

            signingConfig signingConfigs.debug
        }
        release {
            // 1、是否进行混淆
            minifyEnabled true

            // 2、开启zipAlign可以让安装包中的资源按4字节对齐，这样可以减少应用在运行时的内存消耗
            zipAlignEnabled true

            // 3、移除无用的resource文件：当 ProGuard 把部分无用代码移除的时候，
            // 这些代码所引用的资源也会被标记为无用资源，然后系统通过资源压缩功能将它们移除
            // 需要注意的是目前资源压缩器目前不会移除values/文件夹中定义的资源（例如字符串、尺寸、样式和颜色）
            shrinkResources true

            // 4、混淆文件的位置，其中 proguard-android.txt 为 sdk 默认的混淆配置，位于android-sdk/tools/proguard/proguard-android.txt
            // 此外，proguard-android-optimize.txt 也为sdk默认的混淆配置，但它默认打开了优化开关, 可配置相关代码为无效代码
            // 而 proguard-rules.pro 是该模块下的混淆配置。
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.realse
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }


    viewBinding {
        enabled = true
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://maven.aliyun.com/repository/public' }
    maven { url 'https://maven.aliyun.com/repository/google' }
    maven { url 'https://jitpack.io' }

    // 配置 YouMa 仓库
    maven {
        name = "YouMa"

        url 'http://maven.pm.youmatech.com/repository/maven-releases/'

        credentials {
            username = YOUMA_MAVEN_USER
            password = YOUMA_MAVEN_PWD
        }

        allowInsecureProtocol = true
    }

    maven {
        name = "GitHubPackages"
        url "https://maven.pkg.github.com/tencent/shadow"
        //一个只读账号兼容Github Packages暂时不支持匿名下载
        //https://github.community/t/download-from-github-package-registry-without-authentication/14407
        credentials {
            username = 'readonlypat'
            password = '\u0067hp_s3VOOZnLf1bTyvHWblPfaessrVYyEU4JdNbs'
        }
    }
}

dependencies {
    testImplementation Deps.Test.junit
    androidTestImplementation Deps.Test.junit_ext
    androidTestImplementation Deps.Test.espresso_core

    implementation Deps.AndroidX.core_ktx
    implementation Deps.AndroidX.appcompat
    implementation Deps.AndroidX.constraint_layout
    implementation Deps.Material.material

    implementation 'com.hl:base-api'
    implementation('com.hl:base-arch') {
        // base-arch 依赖传递了 smooth-navigation，重写了 navigation-fragment 中的相关类，会冲突需要排除
        exclude group: 'androidx.navigation', module: 'navigation-fragment'
    }

    //    def hlVersion = '0.5.9'
    //    implementation "com.hl:tencent-cloud:${hlVersion}"

    implementation 'com.hl:TencentCloud'
    implementation "com.hl:shadow-init"
    implementation "com.hl:UniMP"

    implementation  Deps.Sensey.sensey
}